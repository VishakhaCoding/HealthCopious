<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="CopiousCare" failures="0" tests="46" name="pivotalApplication.EditLMPVital" time="7.851" errors="1" timestamp="2024-04-25T16:21:41 IST" skipped="45">
  <testcase classname="pivotalApplication.EditLMPVital" name="BfSuite" time="0.000">
    <skipped/>
  </testcase> <!-- BfSuite -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="setup" time="7.851">
    <error message="Could not start a new session. Response code 500. Message: A new session could not be created. Details: io.appium.uiautomator2.common.exceptions.UiAutomator2Exception: Cannot invoke method android.app.UiAutomation androidx.test.uiautomator.UiDevice.getUiAutomation() on object androidx.test.uiautomator.UiDevice@9e5cb7 with parameters [] 
Host info: host: &#039;COPIOUSCARE&#039;, ip: &#039;192.168.1.38&#039;
Build info: version: &#039;4.13.0&#039;, revision: &#039;ba948ece5b*&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.10&#039;
Driver info: io.appium.java_client.AppiumDriver
Command: [null, newSession {capabilities=[{appium:app=C:\pivotalapp-stage-vishakha.apk, appium:appActivity=com.calculator_apps.MainActivity, appium:appPackage=com.calculator_apps, appium:automationName=UiAutomator2, appium:deviceName=samsung, appium:newCommandTimeout=120000, appium:noReset=false, platformName=ANDROID, appium:platformVersion=11, appium:–session-override=true}], desiredCapabilities=Capabilities {app: C:\pivotalapp-stage-vishakh..., appActivity: com.calculator_apps.MainAct..., appPackage: com.calculator_apps, automationName: UiAutomator2, deviceName: samsung, newCommandTimeout: 120000, noReset: false, platformName: ANDROID, platformVersion: 11, –session-override: true}}]
Capabilities {app: C:\pivotalapp-stage-vishakh..., appActivity: com.calculator_apps.MainAct..., appPackage: com.calculator_apps, automationName: UiAutomator2, deviceName: samsung, newCommandTimeout: 120000, noReset: false, platformName: ANDROID, platformVersion: 11, –session-override: true}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: A new session could not be created. Details: io.appium.uiautomator2.common.exceptions.UiAutomator2Exception: Cannot invoke method android.app.UiAutomation androidx.test.uiautomator.UiDevice.getUiAutomation() on object androidx.test.uiautomator.UiDevice@9e5cb7 with parameters [] 
Host info: host: 'COPIOUSCARE', ip: '192.168.1.38'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: io.appium.java_client.AppiumDriver
Command: [null, newSession {capabilities=[{appium:app=C:\pivotalapp-stage-vishakha.apk, appium:appActivity=com.calculator_apps.MainActivity, appium:appPackage=com.calculator_apps, appium:automationName=UiAutomator2, appium:deviceName=samsung, appium:newCommandTimeout=120000, appium:noReset=false, platformName=ANDROID, appium:platformVersion=11, appium:–session-override=true}], desiredCapabilities=Capabilities {app: C:\pivotalapp-stage-vishakh..., appActivity: com.calculator_apps.MainAct..., appPackage: com.calculator_apps, automationName: UiAutomator2, deviceName: samsung, newCommandTimeout: 120000, noReset: false, platformName: ANDROID, platformVersion: 11, –session-override: true}}]
Capabilities {app: C:\pivotalapp-stage-vishakh..., appActivity: com.calculator_apps.MainAct..., appPackage: com.calculator_apps, automationName: UiAutomator2, deviceName: samsung, newCommandTimeout: 120000, noReset: false, platformName: ANDROID, platformVersion: 11, –session-override: true}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at pivotalApplication.EditLMPVital.setup(EditLMPVital.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- setup -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="NumberField" time="0.000">
    <skipped/>
  </testcase> <!-- NumberField -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="IAgree" time="0.000">
    <skipped/>
  </testcase> <!-- IAgree -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="proceedButton" time="0.000">
    <skipped/>
  </testcase> <!-- proceedButton -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="OTP" time="0.000">
    <skipped/>
  </testcase> <!-- OTP -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="submit" time="0.000">
    <skipped/>
  </testcase> <!-- submit -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Createptient" time="0.000">
    <skipped/>
  </testcase> <!-- Createptient -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Neweptient" time="0.000">
    <skipped/>
  </testcase> <!-- Neweptient -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Close" time="0.000">
    <skipped/>
  </testcase> <!-- Close -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="MobileNumber1" time="0.000">
    <skipped/>
  </testcase> <!-- MobileNumber1 -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="confirm" time="0.000">
    <skipped/>
  </testcase> <!-- confirm -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="confirmPopup" time="0.000">
    <skipped/>
  </testcase> <!-- confirmPopup -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="AdditionalNumber1" time="0.000">
    <skipped/>
  </testcase> <!-- AdditionalNumber1 -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="FirstName" time="0.000">
    <skipped/>
  </testcase> <!-- FirstName -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="MiddleName" time="0.000">
    <skipped/>
  </testcase> <!-- MiddleName -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="LastName" time="0.000">
    <skipped/>
  </testcase> <!-- LastName -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Age" time="0.000">
    <skipped/>
  </testcase> <!-- Age -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="GenFemale" time="0.000">
    <skipped/>
  </testcase> <!-- GenFemale -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Address" time="0.000">
    <skipped/>
  </testcase> <!-- Address -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Area" time="0.000">
    <skipped/>
  </testcase> <!-- Area -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="City" time="0.000">
    <skipped/>
  </testcase> <!-- City -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="PinCode" time="0.000">
    <skipped/>
  </testcase> <!-- PinCode -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Next" time="0.000">
    <skipped/>
  </testcase> <!-- Next -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="AddVital" time="0.000">
    <skipped/>
  </testcase> <!-- AddVital -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Continue" time="0.000">
    <skipped/>
  </testcase> <!-- Continue -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="weight" time="0.000">
    <skipped/>
  </testcase> <!-- weight -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Height" time="0.000">
    <skipped/>
  </testcase> <!-- Height -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Temperature" time="0.000">
    <skipped/>
  </testcase> <!-- Temperature -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="SPO2" time="0.000">
    <skipped/>
  </testcase> <!-- SPO2 -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="LMPDate" time="0.000">
    <skipped/>
  </testcase> <!-- LMPDate -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="UpArrow" time="0.000">
    <skipped/>
  </testcase> <!-- UpArrow -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="BPSYS" time="0.000">
    <skipped/>
  </testcase> <!-- BPSYS -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="BPDIA" time="0.000">
    <skipped/>
  </testcase> <!-- BPDIA -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="HeartRate" time="0.000">
    <skipped/>
  </testcase> <!-- HeartRate -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Pulse" time="0.000">
    <skipped/>
  </testcase> <!-- Pulse -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Haemoglobin" time="0.000">
    <skipped/>
  </testcase> <!-- Haemoglobin -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="BloodSugar" time="0.000">
    <skipped/>
  </testcase> <!-- BloodSugar -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="BloodSugarf" time="0.000">
    <skipped/>
  </testcase> <!-- BloodSugarf -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="BloodSugarPP" time="0.000">
    <skipped/>
  </testcase> <!-- BloodSugarPP -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="BloodSugarHB" time="0.000">
    <skipped/>
  </testcase> <!-- BloodSugarHB -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="CholesterolHDL" time="0.000">
    <skipped/>
  </testcase> <!-- CholesterolHDL -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="CholesterolLDL" time="0.000">
    <skipped/>
  </testcase> <!-- CholesterolLDL -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="TotalCholesterol" time="0.000">
    <skipped/>
  </testcase> <!-- TotalCholesterol -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Triglycerides" time="0.000">
    <skipped/>
  </testcase> <!-- Triglycerides -->
  <system-out/>
  <testcase classname="pivotalApplication.EditLMPVital" name="Save" time="0.000">
    <skipped/>
  </testcase> <!-- Save -->
  <system-out/>
</testsuite> <!-- pivotalApplication.EditLMPVital -->
